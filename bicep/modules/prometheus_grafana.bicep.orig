param region string
param config object
param principalObjId string
param roleDefinitionIds object
param subnetIds object

resource azureMonitorWorkspace 'Microsoft.Monitor/accounts@2023-04-03' = {
  name: 'managedPrometheus'
  location: region
  properties: {}
}

resource dce 'Microsoft.Insights/dataCollectionEndpoints@2022-06-01' existing = {
  name: split(azureMonitorWorkspace.properties.defaultIngestionSettings.dataCollectionEndpointResourceId, '/')[8]
  dependsOn: [
    azureMonitorWorkspace
  ]
}

resource grafana 'Microsoft.Dashboard/grafana@2023-09-01' = {
  name: substring('grafana-${uniqueString(resourceGroup().id)}', 0, 16)
  location: region
  sku: {
    name: 'Standard'
  }
  identity: {
    type: 'SystemAssigned'
  }
  properties: {
    apiKey:'Disabled'
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    deterministicOutboundIP: 'Disabled'
    grafanaIntegrations: {
      azureMonitorWorkspaceIntegrations: [
        {
          azureMonitorWorkspaceResourceId: azureMonitorWorkspace.id
        }
      ]
    }
    publicNetworkAccess: 'Enabled'
    zoneRedundancy: 'Disabled'
  }
}

resource role_grafanaWorkspaceReader 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  name: guid(grafana.id, roleDefinitionIds.MonitoringDataReader, azureMonitorWorkspace.id)
  properties: {
    roleDefinitionId: subscriptionResourceId('Microsoft.Authorization/roleDefinitions' , roleDefinitionIds.MonitoringDataReader)
    principalId: grafana.identity.principalId
  }
  scope: azureMonitorWorkspace
}

resource managedIdentity 'Microsoft.ManagedIdentity/userAssignedIdentities@2023-01-31' = {
  name: 'prometheusMI'
  location: region
}

resource role_managedIdentityWorkspacePublisher 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  name: guid(managedIdentity.id, roleDefinitionIds.MonitoringMetricsPublisher, azureMonitorWorkspace.id)
  properties: {
    roleDefinitionId: subscriptionResourceId('Microsoft.Authorization/roleDefinitions' , roleDefinitionIds.MonitoringMetricsPublisher)
    principalId: managedIdentity.properties.principalId
  }
  scope: azureMonitorWorkspace
}

resource roleAssignment 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  name: guid(resourceGroup().id, principalObjId)
  properties: {
    roleDefinitionId: subscriptionResourceId('Microsoft.Authorization/roleDefinitions', roleDefinitionIds.GrafanaAdmin)
    principalId: principalObjId
  }
}

resource prometheusNSG 'Microsoft.Network/networkSecurityGroups@2023-09-01' = {
  name: 'prometheusNSG'
  location: region
}

resource prometheusNIC 'Microsoft.Network/networkInterfaces@2023-09-01' = {
  name: 'prometheusNIC'
  location: region
  properties: {
    ipConfigurations: [
      {
        name: 'ipconfig1'
        properties: {
          privateIPAllocationMethod: 'Dynamic'
          subnet: {
            id: subnetIds[config.subnetName]
          }
        }
      }
    ]
    networkSecurityGroup: {
      id: prometheusNSG.id
    }
  }
}

resource prometheus 'Microsoft.Compute/virtualMachines@2022-03-01' = {
  name: 'prometheus'
  location: region
  properties: {
    hardwareProfile: {
      vmSize: 'Standard_D4s_v4'
    }
    storageProfile: {
      osDisk: {
        name: 'prometheusOSDisk'
        createOption: 'fromImage'
        managedDisk: {
          storageAccountType: 'StandardSSD_LRS'
        }
        deleteOption: 'Delete'
      }
      imageReference: config.vmImage
    }
    networkProfile: {
      networkInterfaces: [
        {
          id: prometheusNIC.id
          properties: {
            deleteOption: 'Delete'
          }
        }
      ]
    }
    osProfile: {
      computerName: 'prometheus'
      adminUsername: config.adminUsername
      linuxConfiguration: {
        disablePasswordAuthentication: true
        ssh: {
          publicKeys: [
            {
              path: '/home/${config.adminUsername}/.ssh/authorized_keys'
              keyData: config.sshPublicKey
            }
          ]
        }
      }
    }
  }
}

output managedIdentityResourceId string = managedIdentity.id
output managedIdentityClientId string = managedIdentity.properties.clientId
output prometheusVmId string = prometheus.id
output prometheusVmIp string = prometheusNIC.properties.ipConfigurations[0].properties.privateIPAddress
output prometheusVmAdmin string = prometheus.properties.osProfile.adminUsername
output dataCollectionEndpointResourceId string = azureMonitorWorkspace.properties.defaultIngestionSettings.dataCollectionEndpointResourceId
output dataCollectionRuleResourceId string = azureMonitorWorkspace.properties.defaultIngestionSettings.dataCollectionRuleResourceId
output prometheusQueryEndpoint string = azureMonitorWorkspace.properties.metrics.prometheusQueryEndpoint
